package {{package}};

{{^jdk8-no-delegate}}
{{#imports}}import {{import}};
{{/imports}}


import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
{{/jdk8-no-delegate}}
import org.springframework.stereotype.Controller;
{{^jdk8-no-delegate}}
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.*;

import com.querydsl.core.types.Predicate;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.querydsl.binding.QuerydslPredicate;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import java.security.Principal;

import java.util.*;
{{#async}}
import java.util.concurrent.Callable;
{{/async}}{{/jdk8-no-delegate}}
{{#useBeanValidation}}
import javax.validation.constraints.*;
import javax.validation.Valid;
{{/useBeanValidation}}
import org.springframework.beans.factory.annotation.Autowired;

@Validated
@RestController
{{#operations}}
public class {{classname}}Controller {
{{#isDelegate}}
    private final {{classname}}Delegate delegate;

    @Autowired
    public {{classname}}Controller({{classname}}Delegate delegate) {
        this.delegate = delegate;
    }{{/isDelegate}}

{{^jdk8-no-delegate}}{{#operation}}
    @{{httpMethod}}Mapping(value = "{{{path}}}")
    public {{#async}}Callable<{{/async}}{{>returnTypes}}{{#async}}>{{/async}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},
        {{/hasMore}}{{/allParams}}{{>helperParams}}) {
        {{^isDelegate}}{{^async}}
        return new ResponseEntity<{{>returnTypes}}>();{{/async}}{{#async}}
        return new Callable<ResponseEntity<{{>returnTypes}}>>() {
            @Override
            public ResponseEntity<{{>returnTypes}}> call() throws Exception {
                return new ResponseEntity<{{>returnTypes}}>(HttpStatus.OK);
            }
        };{{/async}}{{/isDelegate}}{{#isDelegate}}
        {{#isReturnRequired}}return {{/isReturnRequired}}delegate.{{operationId}}({{#allParams}}{{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}}{{#isListContainer}}{{#hasParams}}, {{/hasParams}}predicate, pageable, sortable, principal{{/isListContainer}}{{^isListContainer}}{{#hasParams}}, {{/hasParams}}principal{{/isListContainer}});{{/isDelegate}}
    }
{{/operation}}{{/jdk8-no-delegate}}
}
{{/operations}}
