package {{package}};

{{#imports}}import {{import}};{{/imports}}

import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
{{^jdk8-no-delegate}}
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.*;

import com.querydsl.core.types.Predicate;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.querydsl.binding.QuerydslPredicate;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import java.security.Principal;
import java.util.*;
{{#async}}
    import java.util.concurrent.Callable;
{{/async}}{{/jdk8-no-delegate}}
{{#useBeanValidation}}
import javax.validation.constraints.*;
import javax.validation.Valid;
{{/useBeanValidation}}
import org.springframework.beans.factory.annotation.Autowired;

{{#operations}}
@FeignClient(name = "{{classVarName}}", url = "{{clientUrl}}")
public interface {{classname}}Client {

{{#operation}}
    @RequestMapping(value = "{{{path}}}", method = RequestMethod.{{httpMethodCaps}})
    public {{#async}}Callable<{{/async}}{{>returnTypesClient}}{{#async}}>{{/async}} {{operationId}}({{#allParams}}{{>queryParams}}{{>pathParamsClient}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},
    {{/hasMore}}{{/allParams}}{{>helperParamsClient}});

{{/operation}}
}
{{/operations}}
